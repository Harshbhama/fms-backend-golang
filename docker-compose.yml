version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: auth_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
   
  # Redis
  redis:
    image: redis:7-alpine
    container_name: redis_cache
    ports:
      - "6379:6379"
    command: redis-server --requirepass redispass
    volumes:
      - redis_data:/data
   

  # NGINX API Gateway
  api-gateway:
    image: nginx:1.25-alpine
    container_name: api_gateway
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - auth-service
      # - client-service
      - postgres
      - redis
    restart: unless-stopped

  # Auth Service
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth_service
    ports:
      - "8080:8080"
    volumes:
      - ./auth-service:/app
      - /go/pkg/mod
    working_dir: /app
    environment:
      - DB_HOST=postgres
      - DB_USER=admin
      - DB_PASSWORD=admin123
      - DB_NAME=auth_db
      - DB_PORT=5432
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=redispass
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
   

  # # Client Service
  # client-service:
  #   build:
  #     context: ./client-service
  #     dockerfile: Dockerfile
  #   container_name: client_service
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     - AUTH_SERVICE_URL=http://auth-service:8080
  #     - REDIS_ADDR=redis:6379
  #     - REDIS_PASSWORD=redispass
  #     - DB_HOST=postgres
  #     - DB_USER=admin
  #     - DB_PASSWORD=admin123
  #     - DB_NAME=auth_db
  #     - DB_PORT=5432
  #     - REDIS_ADDR=redis:6379
  #     - REDIS_PASSWORD=redispass
  #   depends_on:
  #     - postgres
  #     - redis
  #   restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
