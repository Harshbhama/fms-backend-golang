# API Gateway Configuration

# Upstream definitions
upstream auth_service {
    server auth-service:8080;
}

# upstream client_service {
#     server client-service:8081;
# }

server {
    listen 80;
    server_name localhost;

    # Health check endpoint
    location /health {
        return 200 'API Gateway is healthy';
        add_header Content-Type text/plain;
    }

    # Auth Service Routes
    location /api/auth/ {
        rewrite ^/api/auth/(.*) /$1 break;
        proxy_pass http://auth_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Client Service Routes
    # location /api/client/ {
    #     # Add authentication check here if needed
    #     # auth_request /auth/validate;
    #     
    #     rewrite ^/api/client/(.*) /$1 break;
    #     proxy_pass http://client_service;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    # }

    # Error responses
    error_page 404 /404.json;
    location = /404.json {
        default_type application/json;
        return 404 '{"status":404,"message":"Resource not found"}';
    }

    error_page 500 502 503 504 /50x.json;
    location = /50x.json {
        default_type application/json;
        return 500 '{"status":500,"message":"Internal server error"}';
    }
}
